// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model VolumeList {
  id              Int @id @default(autoincrement())
  volume          Int @unique
  discountPercent Int
}

model Day {
  id Int @id @default(autoincrement())

  //date
  day       Int
  month     Int
  year      Int
  timestamp Int @default(0) // unix time in seconds

  desc String @default("")

  isVip Boolean @default(false)

  minVolume Int?
  maxVolume Int

  // reservedVolume Int // computed
  // remainedVolume Int // computed

  // n to m with Service
  services   Service[]
  // n to m with Order
  Order      Order[]
  // n to m with GroupType
  GroupTypes GroupType[]
}

model Service {
  id Int @id @default(autoincrement())

  name String
  desc String?

  type String @default("service") // service or package

  priceNormal Int
  priceVip    Int?

  // n to m with Day
  day          Day[]
  // n to m with Service
  OrderService OrderService[]
}

model Customer {
  id           Int     @id @default(autoincrement())
  name         String
  phone        String  @unique
  nationalCode String
  desc         String?

  // 1 to n with Order
  Order Order[]
}

model Order {
  id Int @id @default(autoincrement())

  volume    Int
  groupType String  @default("men-group") // family | men-group | women-group
  groupName String  @default("")
  status    String  @default("await-payment") // await-payment | pre-paid  | paid
  desc      String?

  timeRegistered Int // register time

  // amountBeforeDiscount Int // computed: sum of services amount (1) - watch on: discount
  // discountSum          Int // computed: sum of discounts (2) - watch on: OrderProduct

  calculatedAmount Int @default(0)
  prePayAmount     Int @default(0)

  paymentAuthority String?

  orderStatus String @default("not-reserved") //  not-reserved | reserved

  // n to 1 with Customer
  customerId Int
  Customer   Customer @relation(fields: [customerId], references: [id], onDelete: NoAction, onUpdate: Cascade)

  // n to 1 with Day
  dayId Int
  Day   Day @relation(fields: [dayId], references: [id], onDelete: NoAction, onUpdate: Cascade)

  // n to m with Service
  OrderService OrderService[]
  // 1 to n with Transaction
  Transaction  Transaction[]
  // 1 to n with Discount
  Discount     Discount[]
}

model Discount {
  id    Int    @id @default(autoincrement())
  value Int
  desc  String

  // n to 1 with Order
  orderId Int
  Order   Order @relation(fields: [orderId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model OrderService {
  id Int @id @default(autoincrement())

  price Int
  isVip Boolean

  orderId Int
  Order   Order @relation(fields: [orderId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  serviceId Int
  Service   Service @relation(fields: [serviceId], references: [id], onDelete: NoAction, onUpdate: Cascade)
}

model Transaction {
  id Int @id @default(autoincrement())

  valuePaid Int

  payId            String // read from pay portal
  payPortal        String
  payDate          String
  payDateTimestamp Int

  // n to 1 with Order
  orderId    Int
  Order      Order @relation(fields: [orderId], references: [id], onDelete: NoAction, onUpdate: Cascade)
  // no to 1 with Customer
  customerId Int
}

model PhoneSentCode {
  id    Int    @id @default(autoincrement())
  phone String
  code  String
  exp   Int // timestamp
}

model AppConfig {
  id                           Int     @id @default(autoincrement())
  prePayDiscount               Int     @default(30)
  daysBeforeDayToReserve       Int     @default(3)
  doSendSmsToManager           Boolean @default(false)
  managerPhoneNum              String  @default("")
  doSendMessageToManagerInBale Boolean @default(false)
  mangerBaleId                 String  @default("")
  appName                      String  @default("")
  appLogoPath                  String  @default("")
}

model AdminUser {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
}

model GroupType {
  id       Int    @id @default(autoincrement())
  name     String
  iconPath String

  // n to m with Day
  Days Day[]
}
